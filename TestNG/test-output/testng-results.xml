<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="9" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="41" started-at="2015-11-09T15:57:32Z" finished-at="2015-11-09T15:57:32Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="41" started-at="2015-11-09T15:57:32Z" finished-at="2015-11-09T15:57:32Z">
      <class name="test.quadrate.QuadrateTest">
        <test-method status="PASS" signature="initgeometOb()[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="initgeometOb" is-config="true" duration-ms="8" started-at="2015-11-09T18:57:32Z" finished-at="2015-11-09T18:57:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initgeometOb -->
        <test-method status="PASS" signature="quadrateAreaTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateAreaTest" duration-ms="7" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateAreaTest -->
        <test-method status="PASS" signature="quadrateAreaTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateAreaTest" duration-ms="1" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateAreaTest -->
        <test-method status="PASS" signature="quadrateAreaTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateAreaTest" duration-ms="1" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateAreaTest -->
        <test-method status="PASS" signature="quadrateConstructorTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateConstructorTest" duration-ms="0" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateConstructorTest -->
        <test-method status="PASS" signature="quadrateConstructorTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateConstructorTest" duration-ms="0" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateConstructorTest -->
        <test-method status="PASS" signature="quadrateConstructorTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateConstructorTest" duration-ms="1" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateConstructorTest -->
        <test-method status="PASS" signature="quadrateLengthTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateLengthTest" duration-ms="0" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateLengthTest -->
        <test-method status="FAIL" signature="quadrateLengthTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateLengthTest" duration-ms="2" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[For side = 0.0
The test fails, the length or the number of decimal places does not match expected [0.0] but found [-1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: For side = 0.0
The test fails, the length or the number of decimal places does not match expected [0.0] but found [-1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at test.quadrate.QuadrateTest.quadrateLengthTest(QuadrateTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateLengthTest -->
        <test-method status="PASS" signature="quadrateLengthTest(double)[pri:0, instance:test.quadrate.QuadrateTest@5474c6c]" name="quadrateLengthTest" duration-ms="1" started-at="2015-11-09T18:57:32Z" data-provider="DataForTest" finished-at="2015-11-09T18:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quadrateLengthTest -->
      </class> <!-- test.quadrate.QuadrateTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
